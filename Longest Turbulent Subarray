class Solution:
    def maxTurbulenceSize(self, A):
        maxlen=1 
        curlen=1 
        prevOper= "" 
        for i in range(1, len(A)):
            if A[i-1]==A[i]:
                curlen=1 
                continue
            elif A[i-1]>A[i]:
                if prevOper=="<":
                    curlen +=1
                else:
                    curlen=2
                prevOper=">"
            elif A[i-1]<A[i]:
                if prevOper==">":
                    curlen +=1
                else:
                    curlen=2
                prevOper="<"
            maxlen=max(maxlen,curlen)
        return maxlen

"""
remark: we are finding for length of longest subarray with comparison operator flipped for every adjacent pair

maxlen=1 # 1 is minimum possible value
curlen=1 # 1 is minimum possible length
prevOper= "" #previous operator (nothing is compared at beginning).
"""
